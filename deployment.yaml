# webapp-all.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: webapp
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: webapp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: webapp
rules:
  - apiGroups: 
         - ""
         - apps
         - autoscaling
         - batch
         - extensions
         - policy
         - rbac.authorization.k8s.io
    resources:
      - pods
      - services
      - endpoints
      - configmaps
      - secrets
      - persistentvolumeclaims
      - ingress
      - jobs
      - namespaces
      - nodes
      - persistentvolumes
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-rolebinding
  namespace: webapp
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: webapp
roleRef:
  kind: Role
  name: app-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: mysecrete
  annotations:
    kubernetes.io/service-account.name: jenkins
type: kubernetes.io/service-account-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-maven-app-deployment
  namespace: webapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java-maven-app
  template:
    metadata:
      labels:
        app: java-maven-app
    spec:
      serviceAccountName: jenkins
      containers:
      - name: java-maven-app
        image: fomawill/java-maven-app:1.7
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: java-maven-app-svc
  namespace: webapp
  labels:
    app: java-maven-app
spec:
  type: LoadBalancer
  selector:
    app: java-maven-app
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080
